// {
//     "tasks": [
//         {
//             "type": "cppbuild",
//             "label": "C/C++: g++.exe build active file",
//             "command": "C:\\msys64\\ucrt64\\bin\\g++.exe",
//             "args": [
//                 "-fdiagnostics-color=always",
//                 "-std=c++23",
//                 "-Iinclude",
//                 "-g",
//                 "${file}",
//                 "-o",
//                 "${fileDirname}\\${fileBasenameNoExtension}.exe"
//             ],
//             "options": {
//                 "cwd": "${fileDirname}"
//             },
//             "problemMatcher": [
//                 "$gcc"
//             ],
//             "group": {
//                 "kind": "build",
//                 "isDefault": true
//             },
//             "detail": "Task generated by Debugger."
//         }
//     ],
//     "version": "2.0.0"
// }
{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Clang-build",
            "type": "cppbuild",
            "command": "clang++",
            "args": [
                "--target=x86_64-w64-windows-gnu",
                "-std=c++20", // Use C++17 standard (you can change this to c++11, c++14, c++20, etc.)
                "-Wall", // Enable all common warnings
                "-Wextra", // Enable extra warnings
                "-g", // Generate debug information (essential for debugging)
                "${file}", // The currently active C++ file
                "-o", // Output flag
                "${fileDirname}\\${fileBasenameNoExtension}.exe" // Output executable in the same directory, named after the source file
            ],
            "group": {
                "kind": "build",
                "isDefault": true // This makes it the default build task (Ctrl+Shift+B)
            },
            "presentation": {
                "reveal": "always", // Always show the terminal output
                "panel": "new" // Open a new terminal panel for each build
            },
            "problemMatcher": [
                "$gcc" // Use Clang's problem matcher to parse errors and warnings
            ],
            "detail": "Compile current C++ file with Clang"
        }
    ]
}